[{"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js":"4","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js":"5","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js":"6","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js":"7","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js":"8","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js":"9"},{"size":500,"mtime":1617675421441,"results":"10","hashOfConfig":"11"},{"size":274,"mtime":1617675421437,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1617675421441,"results":"13","hashOfConfig":"11"},{"size":1999,"mtime":1618124198970,"results":"14","hashOfConfig":"11"},{"size":832,"mtime":1618123122095,"results":"15","hashOfConfig":"11"},{"size":976,"mtime":1618120661433,"results":"16","hashOfConfig":"11"},{"size":996,"mtime":1618120661433,"results":"17","hashOfConfig":"11"},{"size":921,"mtime":1618123954525,"results":"18","hashOfConfig":"11"},{"size":68,"mtime":1617675421441,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vh3dly",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js",[],["41","42"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js",["43","44","45"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js",["46"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js",["47"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nimport {getKey} from \"../lib/util\";\nfunction Input(props) {\n  \n  const [item, putItem] = React.useState({ \n      key: '', \n      text: '', \n      done: false\n  });\n  \n  const handleOnChange = (event) => {\n    \n    putItem({\n      ...item,\n      text: event.target.value\n    })\n  }\n  \n  const handleKeyDown = (event) => {\n    if (event.nativeEvent.keyCode === 13) {\n      props.addItem({...item, key: getKey()})\n      putItem({\n        ...item,\n        text: ''\n        })\n    }\n  }\n\n  return (\n    <div className=\"panel-block\">\n    <input value={item.text} onKeyDown={handleKeyDown} onChange={handleOnChange} type=\"text\" autocomplete=\"off\" className=\"input\" />\n    </div>\n  );\n}\n\nexport default Input;\n","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js",["48","49","50"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\n\nimport React, { useState } from 'react';\n\nfunction Filter(props) {\n  \n  const [clicked, setClicked] = React.useState('全て')\n  const items = [\n    '全て',\n    '未完了',\n    '完了済み'\n  ]\n  \n  const tabLinkStyle = {\n    marginRight: \"10px\", \n    marginLeft: \"10px\",\n    color: \"blue\"\n  }\n  \n  const handleOnClick = (item) => {\n    setClicked(item)\n    props.setFilterBy(item)\n  }\n  \n  return (\n    <div className=\"panel-tabs\">\n      <div className=\"tabs is-centered\">\n        <ul>\n        \n          {items.map(item => (\n            <li className={clicked === item ? 'is-active' : ''} onClick={()=>handleOnClick(item)}><a>{item}</a></li>\n          ))}\n        \n        </ul>\n      </div>\n      \n      \n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":1,"column":27,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"60","line":19,"column":9,"nodeType":"57","messageId":"58","endLine":19,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":7,"column":17,"nodeType":"57","messageId":"58","endLine":7,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":8,"column":17,"nodeType":"57","messageId":"58","endLine":8,"endColumn":25},{"ruleId":"55","severity":1,"message":"61","line":19,"column":9,"nodeType":"57","messageId":"58","endLine":19,"endColumn":21},{"ruleId":"62","severity":1,"message":"63","line":36,"column":99,"nodeType":"64","endLine":36,"endColumn":102},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'getKey' is defined but never used.","'tabLinkStyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]