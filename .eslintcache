[{"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js":"4","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js":"5","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js":"6","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js":"7","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js":"8","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js":"9"},{"size":500,"mtime":1617675421441,"results":"10","hashOfConfig":"11"},{"size":274,"mtime":1617675421437,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1617675421441,"results":"13","hashOfConfig":"11"},{"size":1946,"mtime":1618120661437,"results":"14","hashOfConfig":"11"},{"size":832,"mtime":1618120661437,"results":"15","hashOfConfig":"11"},{"size":976,"mtime":1618120661433,"results":"16","hashOfConfig":"11"},{"size":996,"mtime":1618120661433,"results":"17","hashOfConfig":"11"},{"size":655,"mtime":1617675421437,"results":"18","hashOfConfig":"11"},{"size":68,"mtime":1617675421441,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vh3dly",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js",[],["45","46"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js",["47","48","49"],"import React, { useState, useEffect } from 'react';\n\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\nimport useStorage from '../hooks/storage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, putItems] = React.useState([\n      /* テストコード 開始 */\n    { key: getKey(), text: '日本語の宿題', done: false },\n    { key: getKey(), text: 'reactを勉強する', done: false },\n    { key: getKey(), text: '明日の準備をする', done: false },\n    /* テストコード 終了 */\n  ]);\n  \n  const [filterBy, setFilterBy] = React.useState('全て')\n  \n  const addItem = (newItem) => {\n    let newList = [...items]\n    newList.push(newItem)\n    putItems(newList);\n    console.log(newList)\n  }\n  \n  const toggleItem = (itemKey) => {\n    let tempList = [...items];\n    tempList.forEach(itm => {\n      if (itm.key === itemKey) {\n        itm.done = !itm.done\n      }\n    })\n    putItems(tempList)\n  }\n  \n  var toShowItems = [...items]\n  \n  if(filterBy === '未完了') {\n    toShowItems = toShowItems.filter(item => item.done === false)\n  } else if (filterBy === '完了済み') {\n    toShowItems = toShowItems.filter(item => item.done === true)\n  }\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">\n        ITSS ToDoアプリ\n      </div>\n      \n      <Input addItem={addItem}/>\n      \n      <Filter setFilterBy={setFilterBy} />\n      \n      {toShowItems.map(item => (\n        <TodoItem item={item} toggleItem={toggleItem} />\n      ))}\n      <div className=\"panel-block\">\n        {toShowItems.length} items\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js",["50"],"/* \n  【TodoItemコンポーネント】\n　・Todoアイテムを表示する\n　・チェックボックスにチェックが入っているか管理する\n　・チェックボックスにチェックが入っているかアイテムをグレーアウトする\n*/\nimport React, { useState, useEffect } from 'react';\n\nfunction TodoItem(props) {\n  \n  const [clicked, setClicked] = React.useState(false);\n  \n  const handleOnClick = () => {\n    setClicked(!clicked);\n  }\n  \n  return (\n    <label className={clicked ? \"panel-block has-text-grey-light\" : \"panel-block\"}>\n        <input onClick={handleOnClick} type=\"checkbox\" />\n        {props.item.text}\n    </label>\n  );\n}\n\nexport default TodoItem;","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js",["51"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nimport {getKey} from \"../lib/util\";\nfunction Input(props) {\n  \n  const [item, putItem] = React.useState({ \n      key: '', \n      text: '', \n      done: false\n  });\n  \n  const handleOnChange = (event) => {\n    \n    putItem({\n      ...item,\n      text: event.target.value\n    })\n  }\n  \n  const handleKeyDown = (event) => {\n    if (event.nativeEvent.keyCode === 13) {\n      props.addItem({...item, key: getKey()})\n      putItem({\n        ...item,\n        text: ''\n        })\n    }\n  }\n\n  return (\n    <div className=\"panel-block\">\n    <input value={item.text} onKeyDown={handleKeyDown} onChange={handleOnChange} type=\"text\" autocomplete=\"off\" className=\"input\" />\n    </div>\n  );\n}\n\nexport default Input;\n","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js",["52","53","54"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\n\nimport React, { useState } from 'react';\n\nfunction Filter(props) {\n  \n  const [clicked, setClicked] = React.useState('全て')\n  const items = [\n    '全て',\n    '未完了',\n    '完了済み'\n  ]\n  \n  const tabLinkStyle = {\n    marginRight: \"10px\", \n    marginLeft: \"10px\",\n    color: \"blue\"\n  }\n  \n  const handleOnClick = (item) => {\n    setClicked(item)\n    props.setFilterBy(item)\n  }\n  \n  return (\n    <div className=\"panel-tabs\">\n      <div className=\"tabs is-centered\">\n        <ul>\n        \n          {items.map(item => (\n            <li className={clicked === item ? 'is-active' : ''} onClick={()=>handleOnClick(item)}><a>{item}</a></li>\n          ))}\n        \n        </ul>\n      </div>\n      \n      \n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js",["55","56"],"import { useState, useEffect } from 'react';\n\n/* \n  【Storageフック】\n　・TodoをlocalStorageを使って保存する\n　・以下機能をサポートする\n　  - localstrageに保存されているすべてのTodoの読み出し機能\n　  - Todoをlocalstrageに保存する\n　  - localstrageにあるTodoを削除する\n*/\n\nconst STORAGE_KEY = 'itss-todo';\n\nfunction useStorage() {\n  const [items, setItems] = useState([]);\n　\n　/* 副作用を使う */\n  useEffect(() => {\n    \n  }, []);\n\n  const putItems = items => {\n    \n  };\n\n  const clearItems = () => {\n    \n  };\n\n  return [items, putItems, clearItems];\n}\n\nexport default useStorage;","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js",[],["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"68","line":16,"column":8,"nodeType":"65","messageId":"66","endLine":16,"endColumn":18},{"ruleId":"63","severity":1,"message":"64","line":7,"column":17,"nodeType":"65","messageId":"66","endLine":7,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":8,"column":17,"nodeType":"65","messageId":"66","endLine":8,"endColumn":25},{"ruleId":"63","severity":1,"message":"69","line":19,"column":9,"nodeType":"65","messageId":"66","endLine":19,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":36,"column":99,"nodeType":"72","endLine":36,"endColumn":102},{"ruleId":"63","severity":1,"message":"73","line":12,"column":7,"nodeType":"65","messageId":"66","endLine":12,"endColumn":18},{"ruleId":"63","severity":1,"message":"74","line":15,"column":17,"nodeType":"65","messageId":"66","endLine":15,"endColumn":25},{"ruleId":"59","replacedBy":"75"},{"ruleId":"61","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useStorage' is defined but never used.","'tabLinkStyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'STORAGE_KEY' is assigned a value but never used.","'setItems' is assigned a value but never used.",["77"],["78"],"no-global-assign","no-unsafe-negation"]